本技术文档将详细叙述fasttext用于文本分类的过程，仅作参考。
注：在进行训练之前，所有的文件均需数据预处理过程。
注：本项目中所使用的fasttext环境为windows下运行
注：本项目中使用的所有文件格式均为utf-8
注：除分词字典，分词文件，所有的文件均为tsv
环境：Anaconda3--4.3.30，python3.6，jieba0.39,fasttext--0.8.22(windows10下fasttext的网址https://www.lfd.uci.edu/~gohlke/pythonlibs/#fasttext，选择的安装包为：fasttext-0.822-cp36-cp36m-win amd64.whl
----------------------------------------------------------------------------------
fasttext需要用到的数据集为商品描述+__label__+商品标签，故在训练之前，需要将50万数据集分离成商品描述与商品标签，对商品描述进行数据预处理后与商品标签组合成新的训练文件。数据处理部分使用jieba分词。

本项目中我们采用了原始fasttext训练，并以十折交叉法验证，以及使用bootstarp不等比例欠采样进行fasttext改进：

数据预处理：1.运行splitTrain.py(该程序用于分离50万数据的商品描述，商品标签)
                   2.运行dataDispose.py(该程序用于对于50万数据进行预处理）

(必须首先进行数据预处理部分）
原始fasttext：
运行步骤:1.运行fasttextTrain.py(该程序用于预处理好的数据进行fasttext的模型训练以及验证准确率)
               
改进后的fasttext(bootstarp+不等比例欠采样):
运行步骤:1.运行dataBootstarp.py(此文件用于分离训练集测试集）
              2.运行splitMaxMin.py（用于分离训练集中的多数类少数类）
              3.运行bootstarp.py(该程序用于改进后fasttext模型训练)
              4.运行bootstarp验证.py(该程序用于改进后模型的验证)

数据预测输出：
原始fasttext模型的预测输出:
批量预测输出：fasttextOutput:
单个预测输出：fasttextOne：

改进后fasttext模型的预测输出：(此处导入所有的模型，进行预测输出)
批量预测输出：bootstarpOutput

----------------------------------------------------------------------------------
dataDispose，即为数据预处理文件。
其中使用到的文件有：
dictionary.txt，分词采用的字典
stop.txt，停用词字典；
stop_words.txt,经过处理后的停用词字典，主要去除相关空行，空格，修改可能存在的格式问题。
train_product.tsv,50万已标注的数据集分离得到的商品描述
train_label.tsv,50万已标注的数据集分离得到的商品标签
train_product2.tsv,经过处理后的商品描述
train_label2.tsv,经过处理后的商品标签
train_new.tsv,最终用于fasttext训练的集合
若要对新的文件进行分词，需要对trainProductPath进行修改。
----------------------------------------------------------------------------------
fasttextTrain为普通fasttext训练文件，为了提高相关的准确度的可靠性，使用了十折交叉验证法作为测试最终的准确率
使用的训练文件为：train_new.tsv,运行dataDispose即可得到。
训练之后的模型会保存在model文件夹中，共10个。
----------------------------------------------------------------------------------
fasttextOne为预测单个商品所属标签的文件。
直接运行，在控制台输入相应的商品描述即可返回对应的标签。
所使用的文件有：
dictionary.txt为分词所用字典
stop_words.txt为分词所用的停用词词典
----------------------------------------------------------------------------------
----------------------------------------------------------------------------------
接下来即为fasttext结合bootstarp不等比例欠采样代码
此处需要将50万数据按照0.7：0.3的比例分成训练集与测试集，然后将训练集分成多数类与少数类文件。
注：此处的训练集，测试集均做好数据预处理部分
注：分成多数类少数类文件是由对50万数据经过标签统计后的结果，此处仅取类别数据多余七千的数据作为多数类。
----------------------------------------------------------------------------------
bootStrap文件即为结合bootstarp的训练文件
以下即为采用的文件：
train_max.tsv,为训练集中多数类文件
train_min.tsv,为训练集中少数类文件
train_bootstarp,为采用bootstarp后的训练所用文件，此文件在本程序中生成
train_bootstarp2,为将train_bootstarp混乱处理后的训练集，同样在本训练文件中生成。
该文件最终训练后的模型保存在“data/bootstarp/model”中依次排列
----------------------------------------------------------------------------------
boostarp验证，即为验证采用bootstarp不等比例欠采样的准确率文件
本文件所用文件：
test.tsv为测试集文件
test_product.tsv为测试集分离出的商品描述
test_label.tsv为测试集分离出的商品标签
test_label_predict.tsv为模型预测的标签，用于最后的准确率计算




